DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS follows;
DROP TABLE IF EXISTS posts;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	handle VARCHAR(50) UNIQUE NOT NULL,
	email VARCHAR(100) UNIQUE NOT NULL,
	password_hash VARCHAR(255) NOT NULL,
	full_name VARCHAR(100),
	bio TEXT,
	created_at TIMESTAMP DEFAULT NOW(),
	updated_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE posts (
	id SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(id) ON DELETE CASCADE,
	content VARCHAR(280) NOT NULL,
	created_at TIMESTAMP DEFAULT NOW(),
	updated_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE follows (
	follower_id INT REFERENCES users(id) ON DELETE CASCADE,
	followed_id INT REFERENCES users(id) ON DELETE CASCADE,
	created_at TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY (follower_id, followed_id)
);


CREATE TABLE likes (
	user_id INT REFERENCES users(id) ON DELETE CASCADE,
	post_id INT REFERENCES posts(id) ON DELETE CASCADE,
	created_at TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY (user_id, post_id)
);


CREATE TABLE comments (
	id SERIAL PRIMARY KEY,
	post_id INT REFERENCES posts(id) ON DELETE CASCADE,
	user_id INT REFERENCES users(id) ON DELETE CASCADE,
	content TEXT NOT NULL,
	created_at TIMESTAMP DEFAULT NOW()
);